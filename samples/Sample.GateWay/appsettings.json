{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  // 是否启用配置中心，默认启用
  "ConfigCenterEnabled": false,
  "Consul": {
    "Url": "http://localhost:8500",
    "Service": {
      //Http  Grpc
      "Option": "Http",
      "HealthCheck": {
        //单位：秒
        "Timeout": 10,
        //单位：秒
        "Interval": 10
      },
      "Name": "Sample.Gateway",
      "Host": "localhost",
      "Port": 5088,
      "Tag": "测试",
      "LoadBalancer": {
        //RoundRobin  WeightRoundRobin LeastConnection
        "Option": "WeightRoundRobin",
        //权重
        "Weight": 50
      },
      "Scheme": "http"
    },
    //定时同步数据时间间隔，单位：秒 小于等于0表示立即响应
    "Interval": 10
  },
  "RabbitMQ": {
    "HostName": "192.168.56.99",
    "UserName": "admin",
    "Password": "admin",
    "VirtualHost": "/",
    "Port": 5672,
    //消息过期时间，单位：毫秒，过期会自动路由到死信队列，小于或等于0则永久有效
    "MessageTTL": 0,
    "ExchangeName": "Sample.GateWay",
    //每次投递消息数量
    "PrefetchCount": 1
  },
  "Redis": {
    "Sentinels": [ "10.10.166.167:36379", "10.10.166.168:36379", "10.10.166.169:36379" ],
    "ConnectionString": "127.0.0.1:6379,password=123456,defaultDatabase=0,prefix=wing_"
  },
  "Jwt": {
    "Secret": "U2FsdGVkX18E82bSYRnqfv7isu6313BQ8QNTs0TcZZK2rwviQw==",
    "Iss": "https://gitee.com/linguicheng/Wing",
    "Aud": "Wing",
    //token过期分钟数
    "Expire": 1440
  },
  //自动同步实体结构到数据库
  "UseAutoSyncStructure": true,
  "ConnectionStrings": {
    // SqlServer
    "Wing": "Data Source=192.168.56.96;Initial Catalog=Wing;User ID=sa;Password=wing123.;MultipleActiveResultSets=true"
    // Oracle
    //"Wing": "User Id=WING;Password=wing123;Data Source=localhost:1521/ORCL;Enlist=true;Pooling=true;Max Pool Size=512;Min Pool Size=0;Connection Lifetime=600;"
  },
  "Gateway": {
    "Routes": [
      {
        // 上游配置
        "Upstream": {
          // 请求Url
          "Url": "test/hello/{name}"
        },
        // 下游配置
        "Downstreams": [
          {
            // 服务名称
            "ServiceName": "Sample.AspNetCoreService",
            "Url": "WeatherForecast/{name}",
            // 请求方式
            "Method": "get",
            // 服务聚合时必填，不聚合返回可以不填
            "Key": "product"
          },
          {
            // 服务名称
            "ServiceName": "Sample.AspNetCoreService2",
            "Url": "WeatherForecast/{name}",
            // 请求方式
            "Method": "get",
            // 服务聚合时必填，不聚合返回可以不填
            "Key": "good"
          }
        ],
        "UseJWTAuth": false,
        "AuthKey": ""
      },
      {
        // 上游配置
        "Upstream": {
          // 请求Url
          "Url": "test",
          "Method": "post"
        },
        // 下游配置
        "Downstreams": [
          {
            // 服务名称
            "ServiceName": "Sample.AspNetCoreService",
            "Url": "WeatherForecast",
            // 请求方式
            "Method": "post",
            // 服务聚合时必填，不聚合返回可以不填
            "Key": "product"
          },
          {
            // 服务名称
            "ServiceName": "Sample.AspNetCoreService2",
            "Url": "WeatherForecast",
            // 请求方式
            "Method": "post",
            // 服务聚合时必填，不聚合返回可以不填
            "Key": "good"
          }
        ],
        "UseJWTAuth": false,
        "AuthKey": ""
      },
      {
        // 上游配置
        "Upstream": {
          // 请求Url
          "Url": "test2/{name}"
        },
        // 下游配置
        "Downstreams": [
          {
            // 服务名称
            "ServiceName": "Sample.AspNetCoreService2",
            "Url": "WeatherForecast/CustomRoute/{name}",
            // 请求方式
            "Method": "get"
          }
        ],
        "UseJWTAuth": false,
        "AuthKey": ""
      },
      {
        // 上游配置
        "Upstream": {
          // 请求Url
          "Url": "test3/{name}"
        },
        // 下游配置
        "Downstreams": [
          {
            // 服务名称
            "ServiceName": "Sample.AspNetCoreService2",
            "Url": "WeatherForecast/{name}",
            // 请求方式
            "Method": "get"
          }
        ],
        "UseJWTAuth": true,
        "AuthKey": ""
      }
    ],
    //请求头/响应头转发
    "HeadersTransform": {
      // 请求头转发到下游服务
      "Request": {
        // 全局
        "Global": {
          "aa": "bb"
        },
        // 指定下游服务
        "Services": [
          {
            "ServiceName": "Sample.AspNetCoreService2",
            "Headers": { "cc": "dd" }
          }
        ]
      },
      // 响应头返回给前端
      "Response": {
        // 全局
        "Global": {
          "ee": "ff"
        },
        // 指定下游服务
        "Services": [
          {
            "ServiceName": "Sample.AspNetCoreService2",
            "Headers": { "gg": "hh" }
          }
        ]
      }
    },
    // 请求日志
    "Log": {
      "IsEnabled": false,
      "UseEventBus": false
    }
  }
}
