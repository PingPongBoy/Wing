import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-69c93db7.js";const i="/wing/assets/2.3-1-ca2a6c57.png",u="/wing/assets/2.3-2-afc2885f.png",r="/wing/assets/2.3-3-f750f252.png",k={},d=p('<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p><code>Wing</code>内置的负载均衡器支持的算法有<code>轮询</code>、<code>加权轮询</code>、<code>最小连接数</code>。</p><ul><li><p><strong>轮询</strong>：将请求按顺序轮流的分配到后端服务器上，它均衡的对待后端的每一台服务器，而不关心服务器实际的连接数和当前的系统负载。</p></li><li><p><strong>加权轮询</strong>：不同的后端服务器可能机器的配置和当前系统的负载并不相同，因此它们的抗压能力也不相同。给配置高、负载低的机器配置更高的权重，让其处理更多的请求。而配置低、负载高的机器，给其分配较低的权重，降低其系统负载，加权轮询能很好地处理这一问题，并将请求顺序且按照权重分配到后端。</p></li><li><p><strong>最小连接数</strong>：最小连接数算法比较灵活和智能，由于后端服务器的配置不尽相同，对于请求的处理有快有慢，它是根据后端服务器当前的连接情况，动态地选取其中当前积压连接数最少的一台服务器来处理当前的请求，尽可能地提高后端服务的利用效率，将请求合理地分流到每一台服务器。</p></li></ul><div class="hint-container tip"><p class="hint-container-title">为什么要使用内置的负载均衡器？</p><p>我们知道<code>nginx</code>是实现服务器负载均衡的利器，但是，它针对的是服务端的负载均衡。即所有的请求到达<code>nginx</code>后，由<code>nginx</code>服务器进行请求路由的分发，从而实现负载均衡。而对于微服务，我们需要一种更简单、更高效的实现负载均衡的方式，那就是客户端(服务调用方)的负载均衡算法， <code>Wing</code>内置的负载均衡器实现了该功能。即由客户端主动拉取注册中心的服务列表，然后通过负载均衡算法获取一个可用的服务实例发起请求，从而实现了微服务之间的负载均衡调用。</p></div><h3 id="轮询示例" tabindex="-1"><a class="header-anchor" href="#轮询示例" aria-hidden="true">#</a> 轮询示例</h3>',5),v=n("code",null,"Wing.Demo_2.3",-1),b={href:"https://gitee.com/linguicheng/wing-demo/tree/master/2.3-1",target:"_blank",rel:"noopener noreferrer"},m={href:"https://gitee.com/linguicheng/wing-demo/tree/master/2.3-2",target:"_blank",rel:"noopener noreferrer"},g={href:"https://gitee.com/linguicheng/wing-demo/tree/master/2.3-3",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,[n("p",null,[s("3个服务都添加相同的负载均衡算法配置为"),n("code",null,"RoundRobin")])],-1),y=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Consul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Service&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;LoadBalancer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;RoundRobin&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-1</code>Test方法代码</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是示例 2.3-1&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-2</code>Test方法代码</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是示例 2.3-2&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-3</code>Test方法代码</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是示例 2.3-3&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),w=n("code",null,"Wing.Demo_2.3",-1),f={href:"https://gitee.com/linguicheng/wing-demo/tree/master/2.2",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Wing.Demo_2.3",-1),q=p(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">LoadBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Parallel<span class="token punctuation">.</span><span class="token function">For</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">async</span> x <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> _serviceFactory<span class="token punctuation">.</span><span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Wing.Demo_2.3&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> serviceAddr <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> _httpClientFactory<span class="token punctuation">.</span><span class="token function">CreateClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            client<span class="token punctuation">.</span>BaseAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;/WeatherForecast/Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">2311</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">2312</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;请求示例2.3-1次数:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count1</span><span class="token punctuation">}</span></span><span class="token string">，请求示例2.3-2次数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count2</span><span class="token punctuation">}</span></span><span class="token string">，请求示例2.3-3次数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count3</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>StatusCode <span class="token operator">==</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpStatusCode<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">}</span></span><span class="token string">次请求，结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">}</span></span><span class="token string">次请求，状态码：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">response<span class="token punctuation">.</span>StatusCode</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x=n("code",null,"2.3-1",-1),I=n("code",null,"2.3-2",-1),A=n("code",null,"2.3-3",-1),C=n("code",null,"2.2",-1),S={href:"http://localhost:2210/weatherforecast/loadbalance",target:"_blank",rel:"noopener noreferrer"},L=p('<figure><img src="'+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="加权轮询示例" tabindex="-1"><a class="header-anchor" href="#加权轮询示例" aria-hidden="true">#</a> 加权轮询示例</h3><ul><li><p>参照轮询示例</p></li><li><p>示例<code>2.3-1</code>配置权重为1</p></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Consul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Service&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;LoadBalancer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WeightRoundRobin&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">//权重</span>
        <span class="token property">&quot;Weight&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-2</code>配置权重为2</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Consul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Service&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;LoadBalancer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WeightRoundRobin&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">//权重</span>
        <span class="token property">&quot;Weight&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-3</code>配置权重为3</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Consul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Service&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;LoadBalancer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WeightRoundRobin&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">//权重</span>
        <span class="token property">&quot;Weight&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.2</code>LoadBalance方法调整为发起6次请求</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">LoadBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Parallel<span class="token punctuation">.</span><span class="token function">For</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token keyword">async</span> x <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> _serviceFactory<span class="token punctuation">.</span><span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Wing.Demo_2.3&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> serviceAddr <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> _httpClientFactory<span class="token punctuation">.</span><span class="token function">CreateClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            client<span class="token punctuation">.</span>BaseAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;/WeatherForecast/Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">2311</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">2312</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;请求示例2.3-1次数:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count1</span><span class="token punctuation">}</span></span><span class="token string">，请求示例2.3-2次数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count2</span><span class="token punctuation">}</span></span><span class="token string">，请求示例2.3-3次数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count3</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>StatusCode <span class="token operator">==</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpStatusCode<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">}</span></span><span class="token string">次请求，结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">}</span></span><span class="token string">次请求，状态码：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">response<span class="token punctuation">.</span>StatusCode</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),T=n("code",null,"2.3-1",-1),W=n("code",null,"2.3-2",-1),B=n("code",null,"2.3-3",-1),j=n("code",null,"2.2",-1),R={href:"http://localhost:2210/weatherforecast/loadbalance",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"2.3-1",-1),G=n("code",null,"2.3-2",-1),H=n("code",null,"2.3-3",-1),P=p('<figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="最小连接数示例" tabindex="-1"><a class="header-anchor" href="#最小连接数示例" aria-hidden="true">#</a> 最小连接数示例</h3><ul><li><p>参照轮询示例</p></li><li><p>3个服务都添加相同的负载均衡算法配置<code>LeastConnection</code></p></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Consul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Service&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;LoadBalancer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;LeastConnection&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-1</code>Test方法代码，阻塞10秒</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是示例 2.3-1&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-2</code>Test方法代码，阻塞6秒</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是示例 2.3-2&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.3-3</code>Test方法代码</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是示例 2.3-3&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>示例<code>2.2</code>LoadBalance方法调整为发起500次请求</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> count3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">LoadBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Parallel<span class="token punctuation">.</span><span class="token function">For</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token keyword">async</span> x <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> _serviceFactory<span class="token punctuation">.</span><span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Wing.Demo_2.3&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> serviceAddr <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> _httpClientFactory<span class="token punctuation">.</span><span class="token function">CreateClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            client<span class="token punctuation">.</span>BaseAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;/WeatherForecast/Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">2311</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span>Port <span class="token operator">==</span> <span class="token number">2312</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> count3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;请求示例2.3-1次数:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count1</span><span class="token punctuation">}</span></span><span class="token string">，请求示例2.3-2次数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count2</span><span class="token punctuation">}</span></span><span class="token string">，请求示例2.3-3次数：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">count3</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>StatusCode <span class="token operator">==</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpStatusCode<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">}</span></span><span class="token string">次请求，结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;第</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">}</span></span><span class="token string">次请求，状态码：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">response<span class="token punctuation">.</span>StatusCode</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),$=n("code",null,"2.3-1",-1),O=n("code",null,"2.3-2",-1),N=n("code",null,"2.3-3",-1),D=n("code",null,"2.2",-1),V={href:"http://localhost:2210/weatherforecast/loadbalance",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"2.3-3",-1),E=n("figure",null,[n("img",{src:r,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function K(U,J){const a=o("ExternalLinkIcon");return c(),l("div",null,[d,n("ul",null,[n("li",null,[n("p",null,[s("创建3个服务名都是"),v,s("的Web Api项目，("),n("a",b,[s("点击查看完整示例代码2.3-1"),t(a)]),s(")，("),n("a",m,[s("点击查看完整示例代码2.3-2"),t(a)]),s("),("),n("a",g,[s("点击查看完整示例代码2.3-3"),t(a)]),s(")")])]),h]),y,n("ul",null,[n("li",null,[s("创建调用服务"),w,s("的Web Api项目("),n("a",f,[s("点击查看完整示例代码2.2"),t(a)]),s(")，添加LoadBalance方法，对服务"),_,s("发起3次请求，代码如下：")])]),q,n("ul",null,[n("li",null,[s("分别启动被调用的示例服务"),x,s("、"),I,s("、"),A,s("，启动调用服务"),C,s("，浏览器访问 "),n("a",S,[s("http://localhost:2210/weatherforecast/loadbalance"),t(a)]),s(" ，可以看到我们发起的3次请求中，3个服务各被调用1次")])]),L,n("ul",null,[n("li",null,[s("分别启动被调用的示例服务"),T,s("、"),W,s("、"),B,s("，接着启动调用服务"),j,s("，浏览器访问 "),n("a",R,[s("http://localhost:2210/weatherforecast/loadbalance"),t(a)]),s(" ，可以看到我们发起的6次请求中，示例"),F,s("权重为1的被调用1次，示例"),G,s("权重为2的被调用2次，示例"),H,s("权重为3的被调用3次，如下图：")])]),P,n("ul",null,[n("li",null,[s("分别启动被调用的示例服务"),$,s("、"),O,s("、"),N,s("，接着启动调用服务"),D,s("，浏览器访问 "),n("a",V,[s("http://localhost:2210/weatherforecast/loadbalance"),t(a)]),s(" ，可以看到我们发起的500次请求中，示例"),z,s("获得最多请求，结果如下图：")])]),E])}const X=e(k,[["render",K],["__file","load-balance.html.vue"]]);export{X as default};
