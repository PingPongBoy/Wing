import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c,a as n,b as s,d as e,e as t}from"./app-9fb7c2b2.js";const i="/Wing/assets/3.2-2-1-6d4aa4ba.png",r="/Wing/assets/3.2-2-2-27213aec.png",u="/Wing/assets/3.2-3-1-692e01fa.png",d="/Wing/assets/3.2-3-2-dcc326dd.png",k="/Wing/assets/3.2-4-1-bf62e436.png",m="/Wing/assets/3.2-4-2-298fbd63.png",v="/Wing/assets/3.2-5-1-38fad8e1.png",b="/Wing/assets/3.2-5-2-cb9c6954.png",h="/Wing/assets/3.2-6-2-a8133285.png",_="/Wing/assets/3.2-6-1-f95cea6c.png",g="/Wing/assets/3.2-6-3-75d87739.png",q="/Wing/assets/3.2-6-4-f85b209b.png",y={},f=t('<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p><code>Wing</code>的服务网关支持全局和个性化的整个服务或API设置网关策略，目前支持的策略有：<code>熔断</code>、<code>降级</code>、<code>超时</code>、<code>重试</code>、<code>限流</code>、<code>舱壁</code>、<code>鉴权</code>。</p><div class="hint-container warning"><p class="hint-container-title">策略配置</p><p><code>Gateway:Policy:Global</code> 全局策略配置，如果没有配置个性化的策略，将按照全局策略执行。<br><code>Gateway:Policy:Policies[]</code> 个性化服务策略集合，优先于全局策略配置。<br><code>Gateway:Policy:Policies[0]:MethodPolicies[]</code> 个性化服务方法策略集合，优先于服务策略。</p><p><strong>网关策略优先级：服务方法策略&gt;服务策略&gt;全局策略。</strong></p></div><h3 id="降级" tabindex="-1"><a class="header-anchor" href="#降级" aria-hidden="true">#</a> 降级</h3><div class="hint-container info"><p class="hint-container-title">什么是服务降级？</p><p>服务降级一般是指在服务器压力剧增的时候，根据实际业务使用情况以及流量，对一些服务和页面有策略的不处理或者用一种简单的方式进行处理，从而释放服务器资源以保证核心业务的正常高效运行。通常原因为服务器的资源是有限的，而请求是无限的。在用户使用即并发高峰期，会影响整体服务的性能，严重的话会导致宕机，以至于某些重要服务不可用。故高峰期为了保证核心功能服务的可用性，就需要对某些服务降级处理。可以理解为舍小保大，通常处理为不让客户端等待而是立即返回一个友好的提示。服务降级是从整个系统的负荷情况出发和考虑的，对某些负荷会比较高的情况，为了预防某些功能（业务场景）出现负荷过载或者响应慢的情况，在其内部暂时舍弃对一些非核心的接口和数据的请求，而直接返回一个提前准备好的fallback（兜底处理）错误处理信息。这样，虽然提供的是一个有损的服务，但却保证了整个系统的稳定性和可用性。</p></div><p><strong>降级一般是和其他策略搭配使用，比如熔断降级、超时降级、限流降级、舱壁降级。</strong></p><p><strong>Wing服务降级会根据异常情况返回对应的“http状态码”，您可以根据返回的“状态码”做一些友好提示，“状态码”说明如下：</strong></p><ul><li><p><strong>404</strong> 服务或请求URL不存在</p></li><li><p><strong>429</strong> 触发限流或舱壁策略，请求太多</p></li><li><p><strong>502</strong> 网关发生未知异常</p></li><li><p><strong>504</strong> 触发超时策略，请求超时</p></li></ul><h3 id="熔断" tabindex="-1"><a class="header-anchor" href="#熔断" aria-hidden="true">#</a> 熔断</h3><div class="hint-container info"><p class="hint-container-title">什么是熔断？</p><p>当电路中的负载过高的时候，“保险丝”就会熔断。微服务的熔断就如同保险丝一样，当服务间的调用出现频繁的超时，核心服务却一直在等待这个超时服务的响应结果，后果就是整个系统服务的卡顿、无反应，这对于用户端是不可接受的。所以熔断就是某个服务发生不断的调用响应超时的时候，就屏蔽掉这个服务，短路这个服务，不调用这个服务的具体内容直接返回一个默认值，对服务进行降级处理。</p></div><ul><li>策略配置</li></ul>',11),w=n("code",null,"3.2-1",-1),x={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2-1",target:"_blank",rel:"noopener noreferrer"},B=t(`<p><code>Breaker:IsEnabled</code> 是否启用熔断策略</p><p><code>Breaker:ExceptionsAllowedBeforeBreaking</code> 熔断前出现允许出现错误次数</p><p><code>Breaker:MillisecondsOfBreak</code> 熔断时长，单位：毫秒</p><p>全局策略</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">//熔断</span>
        <span class="token property">&quot;Breaker&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//是否启用</span>
          <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token comment">//熔断前出现允许错误几次</span>
          <span class="token property">&quot;ExceptionsAllowedBeforeBreaking&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token comment">//熔断多长时间（毫秒）</span>
          <span class="token property">&quot;MillisecondsOfBreak&quot;</span><span class="token operator">:</span> <span class="token number">60000</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务（方法）策略，Restful风格的动态路由参数可以使用两个中括号{}</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 个性化策略</span>
      <span class="token property">&quot;Policies&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token comment">// 服务名称</span>
          <span class="token property">&quot;Key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Wing.Demo_3.2&quot;</span><span class="token punctuation">,</span>
          <span class="token comment">//熔断</span>
          <span class="token property">&quot;Breaker&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">//是否启用</span>
            <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token comment">//熔断前出现允许错误几次</span>
            <span class="token property">&quot;ExceptionsAllowedBeforeBreaking&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token comment">//熔断多长时间（毫秒）</span>
            <span class="token property">&quot;MillisecondsOfBreak&quot;</span><span class="token operator">:</span> <span class="token number">60000</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;MethodPolicies&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token comment">// 下游地址,{name}是动态路由参数</span>
              <span class="token property">&quot;Key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;weatherforecast/Breaker2/{name}&quot;</span><span class="token punctuation">,</span>
              <span class="token comment">//熔断</span>
              <span class="token property">&quot;Breaker&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">//是否启用</span>
                <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                <span class="token comment">//熔断前出现允许错误几次</span>
                <span class="token property">&quot;ExceptionsAllowedBeforeBreaking&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token comment">//熔断多长时间（毫秒）</span>
                <span class="token property">&quot;MillisecondsOfBreak&quot;</span><span class="token operator">:</span> <span class="token number">60000</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Breaker方法代码，阻塞120秒，触发网关异常</li></ul>`,8),T=n("code",null,"3.2",-1),W={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2",target:"_blank",rel:"noopener noreferrer"},j=t(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Breaker1&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Breaker1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">120</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是Breaker1&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Breaker2/{name}&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Breaker2</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">120</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token interpolation-string"><span class="token string">$&quot;我是Breaker2，name：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果</li></ul>`,2),E=n("code",null,"3.2",-1),G=n("code",null,"3.2-1",-1),P=n("br",null,null,-1),I={href:"http://localhost:3211/Wing.Demo_3.2/weatherforecast/breaker1",target:"_blank",rel:"noopener noreferrer"},M=n("br",null,null,-1),A=n("br",null,null,-1),R={href:"http://localhost:3211/Wing.Demo_3.2/weatherforecast/breaker2/wing",target:"_blank",rel:"noopener noreferrer"},L=n("br",null,null,-1),H=n("h3",{id:"超时",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#超时","aria-hidden":"true"},"#"),s(" 超时")],-1),O=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"什么是超时？"),n("p",null,"超时很好理解，当一个请求的响应时间超过我们设定的时长，那么，我们就认为它“超时”了。“超时”策略可以跟“熔断”策略组合使用。")],-1),z=n("ul",null,[n("li",null,"策略配置")],-1),K=n("code",null,"3.2-2",-1),D={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2-2",target:"_blank",rel:"noopener noreferrer"},U=t(`<p><code>TimeOut:IsEnabled</code> 是否启用超时策略</p><p><code>TimeOut:TimeOutMilliseconds</code> 设定超时时长，单位：毫秒</p><p><code>HttpClientTimeOut</code> HttpClient请求超时，单位：毫秒</p><p>超时全局策略，请求超过5000毫秒，则触发超时降级处理，个性化服务策略设定参考“熔断”配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// HttpClient请求超时，单位：毫秒</span>
        <span class="token property">&quot;HttpClientTimeOut&quot;</span><span class="token operator">:</span> <span class="token number">100</span>*<span class="token number">1000</span><span class="token punctuation">,</span>
        <span class="token comment">// 超时策略</span>
        <span class="token property">&quot;TimeOut&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//是否启用</span>
          <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token comment">//执行超过多少毫秒则认为超时</span>
          <span class="token property">&quot;TimeOutMilliseconds&quot;</span><span class="token operator">:</span> <span class="token number">5000</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Timeout方法代码，阻塞120秒，触发网关超时</li></ul>`,6),N=n("code",null,"3.2",-1),J={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2",target:"_blank",rel:"noopener noreferrer"},S=t(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Timeout&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">120</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;我是Timeout&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果</li></ul>`,2),C=n("code",null,"3.2",-1),Q=n("code",null,"3.2-2",-1),V=n("br",null,null,-1),F={href:"http://localhost:3221/Wing.Demo_3.2/weatherforecast/timeout",target:"_blank",rel:"noopener noreferrer"},$=n("br",null,null,-1),X=n("br",null,null,-1),Y=n("img",{src:i,alt:"",loading:"lazy"},null,-1),Z=n("br",null,null,-1),nn=n("img",{src:r,alt:"",loading:"lazy"},null,-1),sn=n("h3",{id:"重试",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重试","aria-hidden":"true"},"#"),s(" 重试")],-1),an=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"什么是重试？"),n("p",null,"“重试”就是重复执行当前的动作，在微服务架构中，重试模式是从瞬态错误中恢复的常见模式。 在分布式系统中，这些错误的一些示例是: 网络故障-应用程序在短时间内失去连接。 组件故障-某个组件在短时间内不可用。这通常发生在维护或从崩溃中自动恢复期间。 组件过载-短时间内无法接受新请求。这也可能是由于节流或限速实现。 如您所见，上述错误是自我修复的。在这种情况下，客户端重试请求(立即或延迟后)而不是记录错误并中止请求是有意义的。")],-1),en=n("ul",null,[n("li",null,"策略配置")],-1),tn=n("code",null,"3.2-3",-1),on={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2-3",target:"_blank",rel:"noopener noreferrer"},pn=t(`<p><code>Retry:IsEnabled</code> 是否启用重试策略</p><p><code>Retry:MaxTimes</code> 重试次数</p><p><code>Retry:IntervalMilliseconds</code> 重试间隔，单位：毫秒</p><p>超时重试组合全局策略，执行的请求时间超过2000毫秒，则重试3次，每次请求间隔100毫秒，个性化服务策略设定参考“熔断”配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token comment">// 超时策略</span>
        <span class="token property">&quot;TimeOut&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//是否启用</span>
          <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token comment">//执行超过多少毫秒则认为超时</span>
          <span class="token property">&quot;TimeOutMilliseconds&quot;</span><span class="token operator">:</span> <span class="token number">2000</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//重试</span>
        <span class="token property">&quot;Retry&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//是否启用</span>
          <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token comment">//最多重试几次</span>
          <span class="token property">&quot;MaxTimes&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
          <span class="token comment">//重试间隔的毫秒数</span>
          <span class="token property">&quot;IntervalMilliseconds&quot;</span><span class="token operator">:</span> <span class="token number">100</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果</li></ul>`,6),ln=n("code",null,"3.2",-1),cn=n("code",null,"3.2-3",-1),rn=n("br",null,null,-1),un={href:"http://localhost:3231/Wing.Demo_3.2/weatherforecast/retry",target:"_blank",rel:"noopener noreferrer"},dn=n("br",null,null,-1),kn=n("br",null,null,-1),mn=n("img",{src:u,alt:"",loading:"lazy"},null,-1),vn=n("br",null,null,-1),bn=n("img",{src:d,alt:"",loading:"lazy"},null,-1),hn=n("h3",{id:"限流",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#限流","aria-hidden":"true"},"#"),s(" 限流")],-1),_n=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"什么是限流？"),n("p",null,"顾名思义，限流就是限制流量，限流的对象可以是请求的频率，传输的速率，或者并发量等，其中最常见的两个限流对象是请求频率和并发量，他们对应的限流被称为 请求频率限流（Request rate limiting）和 并发量限流（Concurrent requests limiting）。")],-1),gn=n("ul",null,[n("li",null,"策略配置")],-1),qn=n("code",null,"3.2-4",-1),yn={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2-4",target:"_blank",rel:"noopener noreferrer"},fn=t(`<p><code>RateLimit:IsEnabled</code> 是否启用限流策略</p><p><code>RateLimit:NumberOfExecutions</code> 最多执行次数</p><p><code>RateLimit:PerSeconds</code> 每秒数</p><p><code>RateLimit:MaxBurst</code> 最大执行并发数</p><p>限流全局策略，每10秒只能执行1个请求，每次最大执行并发数是1，个性化服务策略设定参考“熔断”配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">//限流</span>
        <span class="token property">&quot;RateLimit&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//是否启用</span>
          <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token comment">//最多执行次数</span>
          <span class="token property">&quot;NumberOfExecutions&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token comment">//秒数</span>
          <span class="token property">&quot;PerSeconds&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
          <span class="token comment">//每次最大执行并发数</span>
          <span class="token property">&quot;MaxBurst&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果</li></ul>`,7),wn=n("code",null,"3.2",-1),xn=n("code",null,"3.2-4",-1),Bn=n("br",null,null,-1),Tn={href:"http://localhost:3241/Wing.Demo_3.2/weatherforecast/ratelimit",target:"_blank",rel:"noopener noreferrer"},Wn=n("br",null,null,-1),jn=n("br",null,null,-1),En=n("img",{src:k,alt:"",loading:"lazy"},null,-1),Gn=n("br",null,null,-1),Pn=n("img",{src:m,alt:"",loading:"lazy"},null,-1),In=n("h3",{id:"舱壁",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#舱壁","aria-hidden":"true"},"#"),s(" 舱壁")],-1),Mn=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"什么是舱壁？"),n("p",null,"在造船行业，往往使用此类模式对船舱进行隔离，利用舱壁将不同的船舱隔离起来，这样如果一个船舱破了进水，只损失一个船舱，其它船舱可以不受影响，而借鉴造船行业的经验，这种模式也在软件行业得到使用。线程隔离(Thread Isolation)就是这种模式的常见的一个场景，调用者在调用服务提供者时，给每个调用的请求分配独立线程池，出现故障时，最多消耗这个线程池内资源，避免把调用者的所有资源耗尽。")],-1),An=n("ul",null,[n("li",null,"策略配置")],-1),Rn=n("code",null,"3.2-5",-1),Ln={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2-5",target:"_blank",rel:"noopener noreferrer"},Hn=t(`<p><code>BulkHead:IsEnabled</code> 是否启用舱壁策略</p><p><code>BulkHead:MaxParallelization</code> 最大并发执行数量</p><p><code>BulkHead:MaxQueuingActions</code> 等待处理的队列长度</p><p>舱壁全局策略，个性化服务策略设定参考“熔断”配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token comment">//舱壁</span>
        <span class="token property">&quot;BulkHead&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//是否启用</span>
          <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token comment">//最大并发执行数量</span>
          <span class="token property">&quot;MaxParallelization&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token comment">//等待处理的队列长度</span>
          <span class="token property">&quot;MaxQueuingActions&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果</li></ul>`,6),On=n("code",null,"3.2",-1),zn=n("code",null,"3.2-5",-1),Kn=n("br",null,null,-1),Dn={href:"http://localhost:3210/weatherforecast/BulkHeadTest",target:"_blank",rel:"noopener noreferrer"},Un=n("br",null,null,-1),Nn=n("br",null,null,-1),Jn=n("img",{src:v,alt:"",loading:"lazy"},null,-1),Sn=n("br",null,null,-1),Cn=n("img",{src:b,alt:"",loading:"lazy"},null,-1),Qn=n("h3",{id:"鉴权",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#鉴权","aria-hidden":"true"},"#"),s(" 鉴权")],-1),Vn=n("code",null,"3.2-6",-1),Fn={href:"https://gitee.com/linguicheng/wing-demo/tree/master/3.2-6",target:"_blank",rel:"noopener noreferrer"},$n=t(`<ul><li>JWT配置</li></ul><p><code>UseJWTAuth</code> 是否启用JWT认证</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;UseJWTAuth&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>JWT认证运行结果</li></ul>`,4),Xn=n("code",null,"3.2",-1),Yn=n("code",null,"3.2-6",-1),Zn=n("br",null,null,-1),ns={href:"http://localhost:3210/weatherforecast/JwtAuthTest",target:"_blank",rel:"noopener noreferrer"},ss=n("br",null,null,-1),as=n("br",null,null,-1),es=n("img",{src:h,alt:"",loading:"lazy"},null,-1),ts=n("br",null,null,-1),os=n("img",{src:_,alt:"",loading:"lazy"},null,-1),ps=t(`<ul><li>AuthKey配置</li></ul><p><code>AuthKey</code> 固定Key认证，通过匹配请求头“AuthKey”的值，相同则认证通过</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 全局策略</span>
      <span class="token property">&quot;Global&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;AuthKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;abcd&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>AuthKey认证运行结果</li></ul>`,4),ls=n("code",null,"3.2",-1),cs=n("code",null,"3.2-6",-1),is=n("br",null,null,-1),rs={href:"http://localhost:3210/weatherforecast/AuthKeyTest",target:"_blank",rel:"noopener noreferrer"},us=n("br",null,null,-1),ds=n("br",null,null,-1),ks=n("img",{src:g,alt:"",loading:"lazy"},null,-1),ms=n("br",null,null,-1),vs=n("img",{src:q,alt:"",loading:"lazy"},null,-1),bs=t(`<h3 id="日志" tabindex="-1"><a class="header-anchor" href="#日志" aria-hidden="true">#</a> 日志</h3><p>网关日志持久化方式支持直接写入数据库和通过事件总线的方式写入数据库库。</p><ul><li>配置</li></ul><p><code>Log:IsEnabled</code> 是否启用网关日志记录</p><p><code>Log:UseEventBus</code> 是否启用事件总线(目前支持RabbitMQ)存储日志</p><p><code>Log:Interval</code> 日志写入频率，单位：秒</p><p><code>Log:Filter</code> 日志过滤器，可以指定哪些服务、请求URL不记录日志</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Gateway&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 请求日志</span>
    <span class="token property">&quot;Log&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 是否启用网关日志记录</span>
      <span class="token property">&quot;IsEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token comment">// 是否启用事件总线(RabbitMQ)存储日志，生产环境推荐启用，可以提升程序的性能</span>
      <span class="token property">&quot;UseEventBus&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token comment">//单位：秒</span>
      <span class="token property">&quot;Interval&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
      <span class="token comment">//过滤日志</span>
      <span class="token property">&quot;Filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">//服务名称，完全匹配</span>
        <span class="token property">&quot;ServiceName&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token comment">// 请求URL，模糊匹配</span>
        <span class="token property">&quot;RequestUrl&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token comment">// 下游URL，模糊匹配</span>
        <span class="token property">&quot;DownstreamUrl&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;RabbitMQ&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;HostName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.56.99&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;UserName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;VirtualHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Port&quot;</span><span class="token operator">:</span> <span class="token number">5672</span><span class="token punctuation">,</span>
    <span class="token comment">//消息过期时间，单位：毫秒，过期会自动路由到死信队列，小于或等于0则永久有效</span>
    <span class="token property">&quot;MessageTTL&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ExchangeName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Sample.GateWay&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//每次投递消息数量</span>
    <span class="token property">&quot;PrefetchCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function hs(_s,gs){const a=p("ExternalLinkIcon");return l(),c("div",null,[f,n("p",null,[s("示例"),w,s("("),n("a",x,[s("点击查看完整示例代码"),e(a)]),s(")")]),B,n("p",null,[s("示例"),T,s("("),n("a",W,[s("点击查看完整示例代码"),e(a)]),s(")")]),j,n("p",null,[s("分别运行示例"),E,s("、"),G,s("，浏览器访问"),P,n("a",I,[s("http://localhost:3211/Wing.Demo_3.2/weatherforecast/breaker1"),e(a)]),s(" ，"),M,s(" 可以看到breaker1被调用1次发生异常之后，被熔断1分钟。浏览器访问"),A,n("a",R,[s("http://localhost:3211/Wing.Demo_3.2/weatherforecast/breaker2/wing"),e(a)]),s(" ，"),L,s(" 可以看到breaker2被调用2次发生异常之后，被熔断1分钟。")]),H,O,z,n("p",null,[s("示例"),K,s("("),n("a",D,[s("点击查看完整示例代码"),e(a)]),s(")")]),U,n("p",null,[s("示例"),N,s("("),n("a",J,[s("点击查看完整示例代码"),e(a)]),s(")")]),S,n("p",null,[s("分别运行示例"),C,s("、"),Q,s("，浏览器访问"),V,n("a",F,[s("http://localhost:3221/Wing.Demo_3.2/weatherforecast/timeout"),e(a)]),s(" ，"),$,s(" 我们可以看到触发了超时异常降级策略，如下图："),X,Y,Z,nn]),sn,an,en,n("p",null,[s("示例"),tn,s("("),n("a",on,[s("点击查看完整示例代码"),e(a)]),s(")")]),pn,n("p",null,[s("分别运行示例"),ln,s("、"),cn,s("，浏览器访问"),rn,n("a",un,[s("http://localhost:3231/Wing.Demo_3.2/weatherforecast/retry"),e(a)]),s(" ，"),dn,s(" 我们可以看到触发了超时重试策略，如下图："),kn,mn,vn,bn]),hn,_n,gn,n("p",null,[s("示例"),qn,s("("),n("a",yn,[s("点击查看完整示例代码"),e(a)]),s(")")]),fn,n("p",null,[s("分别运行示例"),wn,s("、"),xn,s("，浏览器访问"),Bn,n("a",Tn,[s("http://localhost:3241/Wing.Demo_3.2/weatherforecast/ratelimit"),e(a)]),s(" ，"),Wn,s(" 我们可以看到触发了限流策略，如下图："),jn,En,Gn,Pn]),In,Mn,An,n("p",null,[s("示例"),Rn,s("("),n("a",Ln,[s("点击查看完整示例代码"),e(a)]),s(")")]),Hn,n("p",null,[s("分别运行示例"),On,s("、"),zn,s("，浏览器访问"),Kn,n("a",Dn,[s("http://localhost:3210/weatherforecast/BulkHeadTest"),e(a)]),s(" ，"),Un,s(" 我们可以看到触发了舱壁策略，如下图："),Nn,Jn,Sn,Cn]),Qn,n("p",null,[s("支持JWT和设定的AuthKey认证,示例"),Vn,s("("),n("a",Fn,[s("点击查看完整示例代码"),e(a)]),s(")")]),$n,n("p",null,[s("分别运行示例"),Xn,s("、"),Yn,s("，浏览器访问"),Zn,n("a",ns,[s("http://localhost:3210/weatherforecast/JwtAuthTest"),e(a)]),s(" ，"),ss,s(" 如果不传token，调用接口时网关会返回401状态码，传token之后，可以访问成功。如下图："),as,es,ts,os]),ps,n("p",null,[s("分别运行示例"),ls,s("、"),cs,s("，浏览器访问"),is,n("a",rs,[s("http://localhost:3210/weatherforecast/AuthKeyTest"),e(a)]),s(" ，"),us,s(" 如果请求头不传AuthKey，调用接口时网关会返回401状态码，传AuthKey之后，可以访问成功。如下图："),ds,ks,ms,vs]),bs])}const fs=o(y,[["render",hs],["__file","policy.html.vue"]]);export{fs as default};
