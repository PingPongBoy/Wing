import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as k,c as d,a as n,b as s,d as a,w as t,e as i}from"./app-da72dc0c.js";const v="/Wing/assets/1.4-1-01a3f36d.png",m="/Wing/assets/1.4-2-2adbfb0b.png",b={},h=n("h3",{id:"什么是服务发现",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是服务发现","aria-hidden":"true"},"#"),s(" 什么是服务发现?")],-1),g=n("p",null,[n("code",null,"服务发现"),s("是指服务启动后将服务注册信息定时同步刷新到本地或实时获取"),n("code",null,"Consul"),s("的服务信息。")],-1),q=n("h3",{id:"创建一个grpc-service项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建一个grpc-service项目","aria-hidden":"true"},"#"),s(" 创建一个Grpc Service项目")],-1),y=n("li",null,[n("p",null,"提前准备：安装并启动Consul")],-1),_={href:"https://gitee.com/linguicheng/wing-demo/tree/master/1.4",target:"_blank",rel:"noopener noreferrer"},f=n("h3",{id:"安装依赖包",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装依赖包","aria-hidden":"true"},"#"),s(" 安装依赖包")],-1),w=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("dotnet "),n("span",{class:"token function"},"add"),s(` package Wing.Consul
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`Install-Package Wing.Consul 
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),S=i(`<h3 id="grpc健康检查" tabindex="-1"><a class="header-anchor" href="#grpc健康检查" aria-hidden="true">#</a> Grpc健康检查</h3><p>protobuf文件</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">package</span> grpc<span class="token punctuation">.</span>health<span class="token punctuation">.</span>v1<span class="token punctuation">;</span>

<span class="token keyword">message</span> <span class="token class-name">HealthCheckRequest</span> <span class="token punctuation">{</span>
	<span class="token builtin">string</span> service <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">message</span> <span class="token class-name">HealthCheckResponse</span> <span class="token punctuation">{</span>
	<span class="token keyword">enum</span> <span class="token class-name">ServingStatus</span> <span class="token punctuation">{</span>
		UNKNOWN <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		SERVING <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		NOT_SERVING <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token positional-class-name class-name">ServingStatus</span> status <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">service</span> <span class="token class-name">Health</span> <span class="token punctuation">{</span>
	<span class="token keyword">rpc</span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token class-name">HealthCheckRequest</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">HealthCheckResponse</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">rpc</span> <span class="token function">Watch</span><span class="token punctuation">(</span><span class="token class-name">HealthCheckRequest</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">HealthCheckResponse</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HealthCheck代码</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HealthCheck</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Health<span class="token punctuation">.</span>HealthBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>HealthCheckResponse<span class="token punctuation">&gt;</span></span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token class-name">HealthCheckRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServerCallContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HealthCheckResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Status <span class="token operator">=</span> HealthCheckResponse<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ServingStatus<span class="token punctuation">.</span>Serving <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Watch</span><span class="token punctuation">(</span><span class="token class-name">HealthCheckRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">IServerStreamWriter<span class="token punctuation">&lt;</span>HealthCheckResponse<span class="token punctuation">&gt;</span></span> responseStream<span class="token punctuation">,</span> <span class="token class-name">ServerCallContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> responseStream<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HealthCheckResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span> Status <span class="token operator">=</span> HealthCheckResponse<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ServingStatus<span class="token punctuation">.</span>Serving <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="program代码" tabindex="-1"><a class="header-anchor" href="#program代码" aria-hidden="true">#</a> Program代码</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Wing</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Host<span class="token punctuation">.</span><span class="token function">AddWing</span><span class="token punctuation">(</span>builder <span class="token operator">=&gt;</span> builder<span class="token punctuation">.</span><span class="token function">AddConsul</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add services to the container.</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddWing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Configure the HTTP request pipeline.</span>
app<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">MapGrpcService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>GreeterService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;Communication with gRPC endpoints must be made through a gRPC client. To learn how to create a client, visit: https://go.microsoft.com/fwlink/?linkid=2086909&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加配置" tabindex="-1"><a class="header-anchor" href="#添加配置" aria-hidden="true">#</a> 添加配置</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token comment">// 是否启用配置中心，默认启用</span>
  <span class="token property">&quot;ConfigCenterEnabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;Consul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:8500&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Service&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">//Http  Grpc</span>
      <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Grpc&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;HealthCheck&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost:1410&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">//单位：秒</span>
        <span class="token property">&quot;Timeout&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token comment">//单位：秒</span>
        <span class="token property">&quot;Interval&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token property">&quot;GRPCUseTLS&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Wing.Demo_1.4&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Port&quot;</span><span class="token operator">:</span> <span class="token number">1410</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;LoadBalancer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">//RoundRobin  WeightRoundRobin LeastConnection</span>
        <span class="token property">&quot;Option&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WeightRoundRobin&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">//权重</span>
        <span class="token property">&quot;Weight&quot;</span><span class="token operator">:</span> <span class="token number">4</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Scheme&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Developer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;linguicheng&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//定时同步数据时间间隔，单位：秒 小于等于0表示立即响应</span>
    <span class="token property">&quot;Interval&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token comment">//数据中心</span>
    <span class="token property">&quot;DataCenter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dc1&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//等待时间,单位：分钟</span>
    <span class="token property">&quot;WaitTime&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看运行效果" tabindex="-1"><a class="header-anchor" href="#查看运行效果" aria-hidden="true">#</a> 查看运行效果</h3>`,10),R={href:"http://localhost:1310/wing",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"Wing.Demo_1.4",-1),x=n("figure",null,[n("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),W=n("code",null,"SayHello",-1),T=i(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">SayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> _serviceFactory<span class="token punctuation">.</span><span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Wing.Demo_1.4&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> serviceAddr <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> channel <span class="token operator">=</span> GrpcChannel<span class="token punctuation">.</span><span class="token function">ForAddress</span><span class="token punctuation">(</span>serviceAddr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> greeterClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Greeter<span class="token punctuation">.</span>GreeterClient</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> greeterClient<span class="token punctuation">.</span><span class="token function">SayHelloAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HelloRequest</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;Wing&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span>Message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G={href:"http://localhost:1210/weatherforecast/hello",target:"_blank",rel:"noopener noreferrer"},A=n("figure",null,[n("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function N(I,L){const e=l("ExternalLinkIcon"),u=l("CodeTabs"),p=l("RouterLink");return k(),d("div",null,[h,g,q,n("ul",null,[y,n("li",null,[n("p",null,[s("打开 Visual Studio 2022 并创建Grpc Service项目("),n("a",_,[s("点击查看完整示例代码1.4"),a(e)]),s(")")])])]),f,a(u,{id:"24",data:[{id:".NET CLI"},{id:"Package Manager"}]},{title0:t(({value:o,isActive:c})=>[s(".NET CLI")]),title1:t(({value:o,isActive:c})=>[s("Package Manager")]),tab0:t(({value:o,isActive:c})=>[w]),tab1:t(({value:o,isActive:c})=>[C]),_:1},8,["data"]),S,n("ul",null,[n("li",null,[s("运行当前程序并启动示例 "),a(p,{to:"/guide/quick-start/ui.html"},{default:t(()=>[s("1.3")]),_:1}),s("，浏览器访问 "),n("a",R,[s("http://localhost:1310/wing"),a(e)]),s(" ，可以看到注入的Grpc服务"),H,s("，运行效果如下图：")])]),x,n("ul",null,[n("li",null,[s("在示例 "),a(p,{to:"/guide/quick-start/register.html"},{default:t(()=>[s("1.2")]),_:1}),s(" 中调用当前Grpc服务中"),W,s("方法，代码如下：")])]),T,n("ul",null,[n("li",null,[s("运行示例 "),a(p,{to:"/guide/quick-start/register.html"},{default:t(()=>[s("1.2")]),_:1}),s("，浏览器访问 "),n("a",G,[s("http://localhost:1210/weatherforecast/hello"),a(e)]),s(" ，运行效果如下图：")])]),A])}const B=r(b,[["render",N],["__file","discovery.html.vue"]]);export{B as default};
